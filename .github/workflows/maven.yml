# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
     # Step 3: Cache Maven dependencies to speed up the build
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven
      # Step 4: Install dependencies using Maven
    - name: Install dependencies
      run: mvn install -DskipTests
      # Step 5: Run Tests
    - name: Run Tests
      run: mvn clean test
      continue-on-error: true
      
    - name: Setup Allure History
      uses: actions/checkout@v4.2.2
      if: always()
      continue-on-error: true
      with:
          ref: gh-pages
          path: gh-pages

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@v1.11
      if: always()
      with:
          allure_results: target/allure-results
          allure_history: allure-history

    - name: Publish Allure Report
      if: always()
      uses: peaceiris/actions-gh-pages@v4.0.0
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
